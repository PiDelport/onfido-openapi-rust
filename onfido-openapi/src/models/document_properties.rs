/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DocumentProperties {
    #[serde(rename = "date_of_birth", skip_serializing_if = "Option::is_none")]
    pub date_of_birth: Option<String>,
    #[serde(rename = "date_of_expiry", skip_serializing_if = "Option::is_none")]
    pub date_of_expiry: Option<String>,
    #[serde(rename = "document_numbers", skip_serializing_if = "Option::is_none")]
    pub document_numbers: Option<Vec<crate::models::DocumentPropertiesDocumentNumbers>>,
    #[serde(rename = "document_type", skip_serializing_if = "Option::is_none")]
    pub document_type: Option<String>,
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<String>,
    #[serde(rename = "issuing_country", skip_serializing_if = "Option::is_none")]
    pub issuing_country: Option<String>,
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "nationality", skip_serializing_if = "Option::is_none")]
    pub nationality: Option<String>,
    #[serde(rename = "issuing_state", skip_serializing_if = "Option::is_none")]
    pub issuing_state: Option<String>,
    #[serde(rename = "issuing_date", skip_serializing_if = "Option::is_none")]
    pub issuing_date: Option<String>,
    #[serde(rename = "categorisation", skip_serializing_if = "Option::is_none")]
    pub categorisation: Option<String>,
    #[serde(rename = "mrz_line1", skip_serializing_if = "Option::is_none")]
    pub mrz_line1: Option<String>,
    #[serde(rename = "mrz_line2", skip_serializing_if = "Option::is_none")]
    pub mrz_line2: Option<String>,
    #[serde(rename = "mrz_line3", skip_serializing_if = "Option::is_none")]
    pub mrz_line3: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "place_of_birth", skip_serializing_if = "Option::is_none")]
    pub place_of_birth: Option<String>,
    #[serde(rename = "spouse_name", skip_serializing_if = "Option::is_none")]
    pub spouse_name: Option<String>,
    #[serde(rename = "widow_name", skip_serializing_if = "Option::is_none")]
    pub widow_name: Option<String>,
    #[serde(rename = "alias_name", skip_serializing_if = "Option::is_none")]
    pub alias_name: Option<String>,
    #[serde(rename = "issuing_authority", skip_serializing_if = "Option::is_none")]
    pub issuing_authority: Option<String>,
    #[serde(rename = "real_id_compliance", skip_serializing_if = "Option::is_none")]
    pub real_id_compliance: Option<String>,
    #[serde(rename = "address_lines", skip_serializing_if = "Option::is_none")]
    pub address_lines: Option<Box<crate::models::DocumentPropertiesAddressLines>>,
    #[serde(rename = "barcode", skip_serializing_if = "Option::is_none")]
    pub barcode: Option<Vec<crate::models::DocumentPropertiesBarcode>>,
    #[serde(
        rename = "driving_licence_information",
        skip_serializing_if = "Option::is_none"
    )]
    pub driving_licence_information:
        Option<Box<crate::models::DocumentPropertiesDrivingLicenceInformation>>,
    #[serde(
        rename = "document_classification",
        skip_serializing_if = "Option::is_none"
    )]
    pub document_classification:
        Option<Box<crate::models::DocumentPropertiesDocumentClassification>>,
    #[serde(rename = "extracted_data", skip_serializing_if = "Option::is_none")]
    pub extracted_data: Option<Box<crate::models::DocumentPropertiesExtractedData>>,
}

impl DocumentProperties {
    pub fn new() -> DocumentProperties {
        DocumentProperties {
            date_of_birth: None,
            date_of_expiry: None,
            document_numbers: None,
            document_type: None,
            first_name: None,
            gender: None,
            issuing_country: None,
            last_name: None,
            nationality: None,
            issuing_state: None,
            issuing_date: None,
            categorisation: None,
            mrz_line1: None,
            mrz_line2: None,
            mrz_line3: None,
            address: None,
            place_of_birth: None,
            spouse_name: None,
            widow_name: None,
            alias_name: None,
            issuing_authority: None,
            real_id_compliance: None,
            address_lines: None,
            barcode: None,
            driving_licence_information: None,
            document_classification: None,
            extracted_data: None,
        }
    }
}
