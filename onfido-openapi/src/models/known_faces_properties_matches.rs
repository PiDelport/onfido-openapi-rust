/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KnownFacesPropertiesMatches {
    /// The applicant ID of the matched applicant.
    #[serde(rename = "applicant_id", skip_serializing_if = "Option::is_none")]
    pub applicant_id: Option<String>,
    /// A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match.
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<f32>,
    /// The corresponding UUID for the media type.
    #[serde(rename = "media_id", skip_serializing_if = "Option::is_none")]
    pub media_id: Option<String>,
    /// The media type (for example live_photos or live_videos).
    #[serde(rename = "media_type", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
}

impl KnownFacesPropertiesMatches {
    pub fn new() -> KnownFacesPropertiesMatches {
        KnownFacesPropertiesMatches {
            applicant_id: None,
            score: None,
            media_id: None,
            media_type: None,
        }
    }
}
