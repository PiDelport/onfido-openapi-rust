/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DocumentPropertiesExtractedData {
    #[serde(rename = "document_number", skip_serializing_if = "Option::is_none")]
    pub document_number: Option<String>,
    #[serde(rename = "date_of_birth", skip_serializing_if = "Option::is_none")]
    pub date_of_birth: Option<String>,
    #[serde(rename = "date_of_expiry", skip_serializing_if = "Option::is_none")]
    pub date_of_expiry: Option<String>,
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "middle_name", skip_serializing_if = "Option::is_none")]
    pub middle_name: Option<String>,
    #[serde(rename = "full_name", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
    #[serde(rename = "spouse_name", skip_serializing_if = "Option::is_none")]
    pub spouse_name: Option<String>,
    #[serde(rename = "widow_name", skip_serializing_if = "Option::is_none")]
    pub widow_name: Option<String>,
    #[serde(rename = "alias_name", skip_serializing_if = "Option::is_none")]
    pub alias_name: Option<String>,
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<String>,
    #[serde(rename = "mrz_line1", skip_serializing_if = "Option::is_none")]
    pub mrz_line1: Option<String>,
    #[serde(rename = "mrz_line2", skip_serializing_if = "Option::is_none")]
    pub mrz_line2: Option<String>,
    #[serde(rename = "mrz_line3", skip_serializing_if = "Option::is_none")]
    pub mrz_line3: Option<String>,
    #[serde(rename = "nationality", skip_serializing_if = "Option::is_none")]
    pub nationality: Option<String>,
    #[serde(rename = "address_line_1", skip_serializing_if = "Option::is_none")]
    pub address_line_1: Option<String>,
    #[serde(rename = "address_line_2", skip_serializing_if = "Option::is_none")]
    pub address_line_2: Option<String>,
    #[serde(rename = "address_line_3", skip_serializing_if = "Option::is_none")]
    pub address_line_3: Option<String>,
    #[serde(rename = "address_line_4", skip_serializing_if = "Option::is_none")]
    pub address_line_4: Option<String>,
    #[serde(rename = "address_line_5", skip_serializing_if = "Option::is_none")]
    pub address_line_5: Option<String>,
    #[serde(rename = "issuing_authority", skip_serializing_if = "Option::is_none")]
    pub issuing_authority: Option<String>,
}

impl DocumentPropertiesExtractedData {
    pub fn new() -> DocumentPropertiesExtractedData {
        DocumentPropertiesExtractedData {
            document_number: None,
            date_of_birth: None,
            date_of_expiry: None,
            first_name: None,
            last_name: None,
            middle_name: None,
            full_name: None,
            spouse_name: None,
            widow_name: None,
            alias_name: None,
            gender: None,
            mrz_line1: None,
            mrz_line2: None,
            mrz_line3: None,
            nationality: None,
            address_line_1: None,
            address_line_2: None,
            address_line_3: None,
            address_line_4: None,
            address_line_5: None,
            issuing_authority: None,
        }
    }
}
