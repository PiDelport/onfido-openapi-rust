/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Address {
    /// The flat number of this address
    #[serde(rename = "flat_number", skip_serializing_if = "Option::is_none")]
    pub flat_number: Option<String>,
    /// The building number of this address
    #[serde(rename = "building_number", skip_serializing_if = "Option::is_none")]
    pub building_number: Option<String>,
    /// The building name of this address
    #[serde(rename = "building_name", skip_serializing_if = "Option::is_none")]
    pub building_name: Option<String>,
    /// The street of the applicant’s address
    #[serde(rename = "street", skip_serializing_if = "Option::is_none")]
    pub street: Option<String>,
    /// The sub-street of the applicant’s address
    #[serde(rename = "sub_street", skip_serializing_if = "Option::is_none")]
    pub sub_street: Option<String>,
    /// The town of the applicant’s address
    #[serde(rename = "town", skip_serializing_if = "Option::is_none")]
    pub town: Option<String>,
    /// The postcode or ZIP of the applicant’s address
    #[serde(rename = "postcode", skip_serializing_if = "Option::is_none")]
    pub postcode: Option<String>,
    /// The 3 character ISO country code of this address. For example, GBR is the country code for the United Kingdom
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// The address state. US states must use the USPS abbreviation (see also ISO 3166-2:US), for example AK, CA, or TX.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// Line 1 of the applicant's address
    #[serde(rename = "line1", skip_serializing_if = "Option::is_none")]
    pub line1: Option<String>,
    /// Line 2 of the applicant's address
    #[serde(rename = "line2", skip_serializing_if = "Option::is_none")]
    pub line2: Option<String>,
    /// Line 3 of the applicant's address
    #[serde(rename = "line3", skip_serializing_if = "Option::is_none")]
    pub line3: Option<String>,
}

impl Address {
    pub fn new() -> Address {
        Address {
            flat_number: None,
            building_number: None,
            building_name: None,
            street: None,
            sub_street: None,
            town: None,
            postcode: None,
            country: None,
            state: None,
            line1: None,
            line2: None,
            line3: None,
        }
    }
}
