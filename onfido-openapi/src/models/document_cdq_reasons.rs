/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DocumentCdqReasons {
    /// When data points are obscured to the point that we cannot confirm if the fonts match the expected ones.
    #[serde(
        rename = "obscured_data_points",
        skip_serializing_if = "Option::is_none"
    )]
    pub obscured_data_points: Option<String>,
    /// When a critical security feature is obscured. This can also refer to when the holder's wet signature, necessary for the document to be valid, is not present.
    #[serde(
        rename = "obscured_security_features",
        skip_serializing_if = "Option::is_none"
    )]
    pub obscured_security_features: Option<String>,
    /// One of 3 reasons (1) OCR Assisted Scans (i.e. when you're able to move the mouse and highlight part of text), (2) Severely Washed out Background, (3) Overlapping Text.
    #[serde(
        rename = "abnormal_document_features",
        skip_serializing_if = "Option::is_none"
    )]
    pub abnormal_document_features: Option<String>,
    /// Any digital text or electronic watermarks on the document.
    #[serde(
        rename = "watermarks_digital_text_overlay",
        skip_serializing_if = "Option::is_none"
    )]
    pub watermarks_digital_text_overlay: Option<String>,
    /// If the corner has been physically cut off. This can be found on some documents that are no longer valid.
    #[serde(rename = "corner_removed", skip_serializing_if = "Option::is_none")]
    pub corner_removed: Option<String>,
    /// A punched hole is present.
    #[serde(rename = "punctured_document", skip_serializing_if = "Option::is_none")]
    pub punctured_document: Option<String>,
    /// When the back of a document is needed for processing, but is not available.
    #[serde(rename = "missing_back", skip_serializing_if = "Option::is_none")]
    pub missing_back: Option<String>,
    /// When a document has been published digitally, there arenâ€™t enough security features to review so we cannot perform a full fraud assessment.
    #[serde(rename = "digital_document", skip_serializing_if = "Option::is_none")]
    pub digital_document: Option<String>,
}

impl DocumentCdqReasons {
    pub fn new() -> DocumentCdqReasons {
        DocumentCdqReasons {
            obscured_data_points: None,
            obscured_security_features: None,
            abnormal_document_features: None,
            watermarks_digital_text_overlay: None,
            corner_removed: None,
            punctured_document: None,
            missing_back: None,
            digital_document: None,
        }
    }
}
