/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DocumentIqReasons {
    /// When an image of the document is too dark to be able to see data points.
    #[serde(rename = "dark_photo", skip_serializing_if = "Option::is_none")]
    pub dark_photo: Option<String>,
    /// When there is light reflecting on the document causing glare to obstruct data points.
    #[serde(rename = "glare_on_photo", skip_serializing_if = "Option::is_none")]
    pub glare_on_photo: Option<String>,
    /// When data points are blurred and no reference can be made elsewhere in the document or if the data points are too blurry and 'they could be something else'.
    #[serde(rename = "blurred_photo", skip_serializing_if = "Option::is_none")]
    pub blurred_photo: Option<String>,
    /// When data points have been covered either by the applicant or by another object such as a sticker.
    #[serde(rename = "covered_photo", skip_serializing_if = "Option::is_none")]
    pub covered_photo: Option<String>,
    /// Any other reason not listed, such as when holograms are obscuring data points.
    #[serde(rename = "other_photo_issue", skip_serializing_if = "Option::is_none")]
    pub other_photo_issue: Option<String>,
    /// When a document is damaged and we are unable to make out data points.
    #[serde(rename = "damaged_document", skip_serializing_if = "Option::is_none")]
    pub damaged_document: Option<String>,
    /// When the incorrect side of a document has been uploaded, and we have not received the front.
    #[serde(rename = "incorrect_side", skip_serializing_if = "Option::is_none")]
    pub incorrect_side: Option<String>,
    /// When data points are not included in the image due to the document being cut off.
    #[serde(rename = "cut_off_document", skip_serializing_if = "Option::is_none")]
    pub cut_off_document: Option<String>,
    /// If no document has been uploaded or there is a blank image.
    #[serde(
        rename = "no_document_in_image",
        skip_serializing_if = "Option::is_none"
    )]
    pub no_document_in_image: Option<String>,
    /// When 2 different documents are submitted in the same check.
    #[serde(
        rename = "two_documents_uploaded",
        skip_serializing_if = "Option::is_none"
    )]
    pub two_documents_uploaded: Option<String>,
}

impl DocumentIqReasons {
    pub fn new() -> DocumentIqReasons {
        DocumentIqReasons {
            dark_photo: None,
            glare_on_photo: None,
            blurred_photo: None,
            covered_photo: None,
            other_photo_issue: None,
            damaged_document: None,
            incorrect_side: None,
            cut_off_document: None,
            no_document_in_image: None,
            two_documents_uploaded: None,
        }
    }
}
