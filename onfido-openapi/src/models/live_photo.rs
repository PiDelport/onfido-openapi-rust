/*
 * Onfido API
 *
 * The Onfido API is used to submit check requests.
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LivePhoto {
    /// The unique identifier for the photo.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The date and time at which the photo was uploaded.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// The uri of this resource.
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    /// The uri that can be used to download the photo.
    #[serde(rename = "download_href", skip_serializing_if = "Option::is_none")]
    pub download_href: Option<String>,
    /// The name of the uploaded file.
    #[serde(rename = "file_name", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<String>,
    /// The size of the file in bytes.
    #[serde(rename = "file_size", skip_serializing_if = "Option::is_none")]
    pub file_size: Option<i32>,
    /// The file type of the uploaded file.
    #[serde(rename = "file_type", skip_serializing_if = "Option::is_none")]
    pub file_type: Option<String>,
}

impl LivePhoto {
    pub fn new() -> LivePhoto {
        LivePhoto {
            id: None,
            created_at: None,
            href: None,
            download_href: None,
            file_name: None,
            file_size: None,
            file_type: None,
        }
    }
}
